{"version":3,"sources":["components/ConfigScreen.tsx","components/EntryEditor.tsx","components/Page.tsx","components/Sidebar.tsx","components/Field.tsx","components/Dialog.tsx","index.tsx"],"names":["Config","props","onConfigure","a","sdk","app","getCurrentState","currentState","parameters","state","targetState","this","getParameters","setState","setReady","className","css","margin","Component","Entry","useState","entry","fields","type","getValue","setType","category","setCategory","title","setTitle","link","setLink","status","setStatus","style","row","id","name","width","onChange","event","target","value","setValue","Page","Sidebar","Field","Dialog","init","root","document","getElementById","location","locations","LOCATION_APP_CONFIG","component","LOCATION_ENTRY_FIELD","LOCATION_ENTRY_EDITOR","EntryEditor","LOCATION_DIALOG","LOCATION_ENTRY_SIDEBAR","LOCATION_PAGE","forEach","componentLocationSetting","is","render"],"mappings":"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","file":"static/js/main.1c2bd419.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { AppExtensionSDK } from 'contentful-ui-extensions-sdk';\nimport { Heading, Form, Workbench, Paragraph } from '@contentful/forma-36-react-components';\nimport { css } from 'emotion';\n\nexport interface AppInstallationParameters {}\n\ninterface ConfigProps {\n  sdk: AppExtensionSDK;\n}\n\ninterface ConfigState {\n  parameters: AppInstallationParameters;\n}\n\nexport default class Config extends Component<ConfigProps, ConfigState> {\n  constructor(props: ConfigProps) {\n    super(props);\n    this.state = { parameters: {} };\n\n    // `onConfigure` allows to configure a callback to be\n    // invoked when a user attempts to install the app or update\n    // its configuration.\n    props.sdk.app.onConfigure(() => this.onConfigure());\n  }\n\n  async componentDidMount() {\n    // Get current parameters of the app.\n    // If the app is not installed yet, `parameters` will be `null`.\n    const parameters: AppInstallationParameters | null = await this.props.sdk.app.getParameters();\n\n    this.setState(parameters ? { parameters } : this.state, () => {\n      // Once preparation has finished, call `setReady` to hide\n      // the loading screen and present the app to a user.\n      this.props.sdk.app.setReady();\n    });\n  }\n\n  onConfigure = async () => {\n    // This method will be called when a user clicks on \"Install\"\n    // or \"Save\" in the configuration screen.\n    // for more details see https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#register-an-app-configuration-hook\n\n    // Get current the state of EditorInterface and other entities\n    // related to this app installation\n    const currentState = await this.props.sdk.app.getCurrentState();\n\n    return {\n      // Parameters to be persisted as the app configuration.\n      parameters: this.state.parameters,\n      // In case you don't want to submit any update to app\n      // locations, you can just pass the currentState as is\n      targetState: currentState\n    };\n  };\n\n  render() {\n    return (\n      <Workbench className={css({ margin: '80px' })}>\n        <Form>\n          <Heading>Feriha App Configuration</Heading>\n          <Paragraph>Welcome to feriha app configuration page.</Paragraph>\n        </Form>\n      </Workbench>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { \n  TextInput,\n  Card,\n  DisplayText,\n  Paragraph,\n  SectionHeading,\n  FieldGroup,\n  Typography,\n  Select,\n  Option\n} from '@contentful/forma-36-react-components';\nimport { EditorExtensionSDK } from 'contentful-ui-extensions-sdk';\n\ninterface EditorProps {\n  sdk: EditorExtensionSDK;\n}\n\n\nconst Entry = (props: EditorProps) => {\n  \n  const [\n    type,\n    setType\n  ] = useState(props.sdk.entry.fields.type.getValue());\n  \n  const [\n    category,\n    setCategory\n  ] = useState(props.sdk.entry.fields.category.getValue());\n  \n  const [\n    title,\n    setTitle\n  ] = useState(props.sdk.entry.fields.title.getValue());\n  \n  const [\n    link,\n    setLink\n  ] = useState(props.sdk.entry.fields.link.getValue());\n    \n  const [\n    status,\n    setStatus\n  ] = useState(props.sdk.entry.fields.status.getValue() === \"yes\");\n  \n  const containerStyle = {\n    'margin': '1.5rem auto',\n    'width': '100%',\n    'max-width': '768px'\n  };\n  \n  const onTypeChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setType(event.target.value);\n    props.sdk.entry.fields.type.setValue(event.target.value);\n  };\n\n  const onCategoryChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCategory(event.target.value);\n    props.sdk.entry.fields.category.setValue(event.target.value);\n  };\n\n  const onTitleChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    props.sdk.entry.fields.title.setValue(event.target.value);\n  };\n\n  const onLinkChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLink(event.target.value)\n    props.sdk.entry.fields.link.setValue(event.target.value);\n  };\n\n  const onStatusChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const status = event.target.value === 'yes';\n    setStatus(status);\n    props.sdk.entry.fields.status.setValue(status);\n  };\n\n\n  return <div style={containerStyle}>\n  <Card>\n  <Typography>\n    <DisplayText>Menu Item</DisplayText>\n    <Paragraph>Type field is conditional</Paragraph>\n  </Typography>\n  <FieldGroup row={false}>\n    <SectionHeading>Type</SectionHeading>\n    <Select\n      id=\"type\"\n      name=\"type\"\n      width=\"large\"\n      onChange={onTypeChangeHandler}\n      value={type}\n    >\n      <Option value=\"Category\">Category</Option>\n      <Option value=\"Custom Link\">Custom Link</Option>\n    </Select>\n  </FieldGroup>\n  {(type === \"Category\" || !props.sdk.entry.fields.category.getValue()) && (\n  <FieldGroup row={false}>\n    <SectionHeading>Category</SectionHeading>\n    <TextInput onChange={onCategoryChangeHandler} value={category} />\n  </FieldGroup>\n  )}\n  {type === \"Custom Link\" && (\n  <FieldGroup row={false}>\n    <SectionHeading>Title</SectionHeading>\n    <TextInput onChange={onTitleChangeHandler} value={title} />  \n    <SectionHeading>Custom Link</SectionHeading>\n    <TextInput onChange={onLinkChangeHandler} value={link} />\n  </FieldGroup>\n  )}\n  <FieldGroup row={false}>\n    <SectionHeading>Status</SectionHeading>\n    <Select\n      id=\"status\"\n      name=\"status\"\n      width=\"large\"\n      onChange={onStatusChangeHandler}\n      value={status ? \"yes\" : \"no\"}\n    >\n      <Option value=\"yes\">Enabled</Option>\n      <Option value=\"no\">Disabled</Option>\n    </Select>\n  </FieldGroup>\n  </Card>\n</div>\n};\n\nexport default Entry;\n","import React from 'react';\nimport { Heading, Form, Workbench, Paragraph } from '@contentful/forma-36-react-components';\nimport { PageExtensionSDK } from 'contentful-ui-extensions-sdk';\nimport { css } from 'emotion';\n\ninterface PageProps {\n  sdk: PageExtensionSDK;\n}\n\nconst Page = (props: PageProps) => {\n  return (\n    <Workbench className={css({ margin: '80px'})}>\n      <Form className={css({ margin:'0px auto'}, {'border':'1px solid red'}, {'height':'max-content'}, {'padding':'20px'})}>\n        <Heading>Hi!</Heading>\n        <Paragraph>This is feriha app page.. dsadsa</Paragraph>\n      </Form>\n    </Workbench>\n  );\n};\n\nexport default Page;\n","import React from 'react';\nimport { Paragraph } from '@contentful/forma-36-react-components';\nimport { SidebarExtensionSDK } from 'contentful-ui-extensions-sdk';\n\ninterface SidebarProps {\n  sdk: SidebarExtensionSDK;\n}\n\nconst Sidebar = (props: SidebarProps) => {\n  return <Paragraph>Hello Sidebar Component</Paragraph>;\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { Paragraph } from '@contentful/forma-36-react-components';\nimport { FieldExtensionSDK } from 'contentful-ui-extensions-sdk';\n\ninterface FieldProps {\n  sdk: FieldExtensionSDK;\n}\n\nconst Field = (props: FieldProps) => {\n  // If you only want to extend Contentful's default editing experience\n  // reuse Contentful's editor components\n  // -> https://www.contentful.com/developers/docs/extensibility/field-editors/\n  return <Paragraph>Hello Entry Field Component</Paragraph>;\n};\n\nexport default Field;\n","import React from 'react';\nimport { Paragraph } from '@contentful/forma-36-react-components';\nimport { DialogExtensionSDK } from 'contentful-ui-extensions-sdk';\n\ninterface DialogProps {\n  sdk: DialogExtensionSDK;\n}\n\nconst Dialog = (props: DialogProps) => {\n  return <Paragraph>Hello Dialog Component</Paragraph>;\n};\n\nexport default Dialog;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport {\n  AppExtensionSDK,\n  FieldExtensionSDK,\n  SidebarExtensionSDK,\n  DialogExtensionSDK,\n  EditorExtensionSDK,\n  PageExtensionSDK,\n  BaseExtensionSDK,\n  init,\n  locations\n} from 'contentful-ui-extensions-sdk';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport '@contentful/forma-36-fcss/dist/styles.css';\nimport '@contentful/forma-36-tokens/dist/css/index.css';\nimport './index.css';\n\nimport Config from './components/ConfigScreen';\nimport EntryEditor from './components/EntryEditor';\nimport Page from './components/Page';\nimport Sidebar from './components/Sidebar';\nimport Field from './components/Field';\nimport Dialog from './components/Dialog';\n\nimport LocalhostWarning from './components/LocalhostWarning';\n\nif (process.env.NODE_ENV === 'development' && window.self === window.top) {\n  // You can remove this if block before deploying your app\n  const root = document.getElementById('root');\n  render(<LocalhostWarning />, root);\n} else {\n  init((sdk: BaseExtensionSDK) => {\n    const root = document.getElementById('root');\n\n    // All possible locations for your app\n    // Feel free to remove unused locations\n    // Dont forget to delete the file too :)\n    const ComponentLocationSettings = [\n      {\n        location: locations.LOCATION_APP_CONFIG,\n        component: <Config sdk={(sdk as unknown) as AppExtensionSDK} />\n      },\n      {\n        location: locations.LOCATION_ENTRY_FIELD,\n        component: <Field sdk={(sdk as unknown) as FieldExtensionSDK} />\n      },\n      {\n        location: locations.LOCATION_ENTRY_EDITOR,\n        component: <EntryEditor sdk={(sdk as unknown) as EditorExtensionSDK} />\n      },\n      {\n        location: locations.LOCATION_DIALOG,\n        component: <Dialog sdk={(sdk as unknown) as DialogExtensionSDK} />\n      },\n      {\n        location: locations.LOCATION_ENTRY_SIDEBAR,\n        component: <Sidebar sdk={(sdk as unknown) as SidebarExtensionSDK} />\n      },\n      {\n        location: locations.LOCATION_PAGE,\n        component: <Page sdk={(sdk as unknown) as PageExtensionSDK} />\n      }\n    ];\n\n    // Select a component depending on a location in which the app is rendered.\n    ComponentLocationSettings.forEach(componentLocationSetting => {\n      if (sdk.location.is(componentLocationSetting.location)) {\n        render(componentLocationSetting.component, root);\n      }\n    });\n  });\n}\n"],"sourceRoot":""}